// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl
// and the code is updated and solved by Anuj Yadav

// NOTE: The sel[0] will represent the least significant bit and that is the key to solve
// this problem

// Look for Mux4Way16 for hint and how the solution is wokring.
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       c if sel == 010
 *       d if sel == 011
 *       e if sel == 100
 *       f if sel == 101
 *       g if sel == 110
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux16(a=a,b=e,sel=sel[2],out=w0);
	Mux16(a=b,b=f,sel=sel[2],out=w1);
	Mux16(a=c,b=g,sel=sel[2],out=w2);
	Mux16(a=d,b=h,sel=sel[2],out=w3);
	
	Mux16(a=w0,b=w2,sel=sel[1],out=r1);
	Mux16(a=w1,b=w3,sel=sel[1],out=r2);
	
	Mux16(a=r1,b=r2,sel=sel[0],out=out);
	
}