// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl
// and the code is updated and solved by Anuj Yadav

// NOTE: The sel[0] will represent the least significant bit and that is the key to solve
// this problem


/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux16(a=a,b=c,sel=sel[1],out=res1);
	Mux16(a=b,b=d,sel=sel[1],out=res2);
	Mux16(a=res1,b=res2,sel=sel[0],out=out);
	//Mux(a=a[0],b=c[0],sel=sel[0],out=res1);
	//Mux(a=b[0],b=d[0],sel=sel[0],out=res2);
	//Mux(a=res1,b=res2,sel=sel[1],out=out[0]);
}